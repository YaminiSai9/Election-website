{"version":3,"sources":["components/Header.js","components/Home.js","components/Polls.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","Link","to","Home","Polls","polls","setPolls","useState","useEffect","axios","get","then","response","data","catch","error","console","map","poll","key","id","question","Results","results","setResults","result","outcome","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sQAkBeA,MAfAA,IAEPC,IAAAC,cAAA,cACID,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,WACID,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAID,IAAAC,cAACC,IAAI,CAACC,GAAG,KAAI,SACjBH,IAAAC,cAAA,UAAID,IAAAC,cAACC,IAAI,CAACC,GAAG,UAAS,UACtBH,IAAAC,cAAA,UAAID,IAAAC,cAACC,IAAI,CAACC,GAAG,YAAW,eCA7BC,MATFA,IAELJ,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,2CACJD,IAAAC,cAAA,SAAG,6E,QCwBAI,MA3BDA,KACV,MAAOC,EAAOC,GAAYC,mBAAS,IAYnC,OAVAC,oBAAU,KACNC,IAAMC,IAAI,2CACLC,KAAKC,IACFN,EAASM,EAASC,QAErBC,MAAMC,IACHC,QAAQD,MAAM,wBAAyBA,MAEhD,IAGChB,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UACKK,EAAMY,IAAKC,GACRnB,IAAAC,cAAA,MAAImB,IAAKD,EAAKE,IACTF,EAAKG,cCQfC,MA3BCA,KACZ,MAAOC,EAASC,GAAcjB,mBAAS,IAYvC,OAVAC,oBAAU,KACNC,IAAMC,IAAI,6CACLC,KAAKC,IACFY,EAAWZ,EAASC,QAEvBC,MAAMC,IACHC,QAAQD,MAAM,0BAA2BA,MAElD,IAGChB,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UACKuB,EAAQN,IAAKQ,GACV1B,IAAAC,cAAA,MAAImB,IAAKM,EAAOL,IACXK,EAAOJ,SAAS,KAAGI,EAAOC,aCFpCC,MAbHA,IAER5B,IAAAC,cAAC4B,IAAM,KACL7B,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAAC6B,IAAM,KACL9B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,IAAIC,QAASjC,IAAAC,cAACG,EAAI,QAC9BJ,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASC,QAASjC,IAAAC,cAACI,EAAK,QACpCL,IAAAC,cAAC8B,IAAK,CAACC,KAAK,WAAWC,QAASjC,IAAAC,cAACsB,EAAO,UCFjCW,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,KAAKyB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,IAAAC,cAACD,IAAMgD,WAAU,KACfhD,IAAAC,cAAC2B,EAAG,QAORM,M","file":"static/js/main.825b4576.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>Election Polling</h1>\n            <nav>\n                <ul>\n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><Link to=\"/polls\">Polls</Link></li>\n                    <li><Link to=\"/results\">Results</Link></li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h2>Welcome to the Election Polling Website</h2>\n            <p>Stay informed about the upcoming elections and participate in the polls.</p>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Polls = () => {\n    const [polls, setPolls] = useState([]);\n\n    useEffect(() => {\n        axios.get('https://api.example.com/elections/polls')\n            .then(response => {\n                setPolls(response.data);\n            })\n            .catch(error => {\n                console.error('Error fetching polls:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2>Upcoming Polls</h2>\n            <ul>\n                {polls.map((poll) => (\n                    <li key={poll.id}>\n                        {poll.question}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Polls;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Results = () => {\n    const [results, setResults] = useState([]);\n\n    useEffect(() => {\n        axios.get('https://api.example.com/elections/results')\n            .then(response => {\n                setResults(response.data);\n            })\n            .catch(error => {\n                console.error('Error fetching results:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2>Poll Results</h2>\n            <ul>\n                {results.map((result) => (\n                    <li key={result.id}>\n                        {result.question}: {result.outcome}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Results;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Polls from './components/Polls';\nimport Results from './components/Results';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/polls\" element={<Polls />} />\n        <Route path=\"/results\" element={<Results />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}